install.packages("shiny")
install.packages("shiny")
setwd("~/GitHub/datasciencecoursera/R")
GETWD
getwd()
setwd("~/GitHub/datasciencecoursera/R")
cd /github
pwd
getwd()
setwd("~/")
setwd("~/GitHub/datasciencecoursera/R")
setwd("~/GitHub/datasciencecoursera/R")
detwd()
getwd()
getwd()
library(httr)
oauth_endpoints("github")
myapp <- oauth_app("github", "ClientID", "ClientSecret")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
q()
source('~/GitHub/datasciencecoursera/R/RepData_PeerAssessment1/PA1_template_code.R')
source("./PA1_template_code.R")
source('~/GitHub/datasciencecoursera/R/RepData_PeerAssessment1/PA1_template_code.R')
df$date <- as.Date(df$date)
```
## plot4.R by Hecman-mx
# Load the NEI & SCC data frames.
NEI <- readRDS("C:/Github/ExData_Course_Project_2/data/summarySCC_PM25.rds")
SCC <- readRDS("C:/Github/ExData_Course_Project_2/data/Source_Classification_Code.rds")
# Subset coal combustion related NEI data
combustionRelated <- grepl("comb", SCC$SCC.Level.One, ignore.case=TRUE)
coalRelated <- grepl("coal", SCC$SCC.Level.Four, ignore.case=TRUE)
coalCombustion <- (combustionRelated & coalRelated)
combustionSCC <- SCC[coalCombustion,]$SCC
combustionNEI <- NEI[NEI$SCC %in% combustionSCC,]
png("plot4.png",width=600,height=480,units="px",bg="transparent")
library(ggplot2)
ggp <- ggplot(combustionNEI,aes(factor(year),Emissions/10^3,fill=year)) +
geom_bar(stat="identity") +
theme_bw() +  guides(fill=FALSE) +
labs(x="Year", y=expression("Total PM"[2.5]*" Emission (Thousand of Tons)")) +
labs(title=expression("PM"[2.5]*" Coal Combustion Source Emissions Across US from 1999-2008"))
print(ggp)
dev.off()
print(ggp)
source('C:/Github/ExData_Course_Project_2/plot5.R')
source('C:/Github/ExData_Course_Project_2/plot6.R')
source('C:/Github/ExData_Course_Project_2/plot2.R')
sigma_1^2/n_1 + sigma_2^2/n_2
R.version.string
install.packages("swirl")
library(swirl)
install_from_swirl("Statistical Inference")
swirl()
33/36
deck
1/52
52
4/52
0
12/52
2/51
n1 <- n2 <- 9
x1 <- -3  ##treated
x2 <- 1  ##placebo
s1 <- 1.5  ##treated
s2 <- 1.8  ##placebo
s <- sqrt(((n1 - 1) * s1^2 + (n2 - 1) * s2^2)/(n1 + n2 - 2))
ts <- (x1 - x2)/(s * sqrt(1/n1 + 1/n2))
2 * pt(ts, n1 + n2 - 2)
library(swirl)
swirl()
install_from_swirl("Regression Models")
swirl()
plot(child ~ parent, galton)
plot(jitter(child,4) ~ parent,galton)
regrline <- lm(child ~ parent,galton)
abline(regrline, lwd=3, col= 'red')
summary(regrline)
q
>
exit
quit
q
>
<
>q()
>
<
exit
q()
x <- c(0.18, -1.54, 0.42, 0.95)
w <- c(2, 1, 3, 1)
weighted.mean(x, w)
setwd("~/GitHub/datasciencecoursera/R/Regression Models")
setwd("~/GitHub/datasciencecoursera/R/Regression Models")
setwd("C:/Users/HÃ©ctorManuel/Documents/GitHub/datasciencecoursera/R/Regression Models")
library(knitr)
getwd()
knit2html("RegMods_CourseProject.Rmd")
knit2pdf("RegMods_CourseProject.Rmd")
knit2pdf("RegMods_CourseProject.Rmd")
knit2pdf("RegMods_CourseProject.Rmd")
View(mtcars_vars)
View(mtcars)
knit2html("RegMods_CourseProject.Rmd")
setwd("~/GitHub/datasciencecoursera/R/Regression Models")
setwd("C:/GitHub/Regression Models")
knit2html("RegMods_CourseProject.Rmd")
knit2pdf("RegMods_CourseProject.Rmd")
tf <- tempfile()
brew("template.brew", tf)
tf <- tempfile(fileext=".tex")
cat(
"\\documentclass{minimal}\\begin{document}test\\end{document}",
file=tf
)
tools::texi2dvi(tf)
knit2pdf("RegMods_CourseProject.Rmd")
system('pdflatex knitr-minimal.tex')
texinfo (sudo apt-get install texinfo)
texi2pdf(file, clean = FALSE, quiet = TRUE,
texi2dvi = getOption("texi2dvi"),
texinputs = NULL, index = TRUE)
texi2dvi(file, pdf = FALSE, clean = FALSE, quiet = TRUE,
texi2dvi = getOption("texi2dvi"),
texinputs = NULL, index = TRUE)
texi2dvi(pdf = TRUE).
texi2dvi(pdf = TRUE)
install.packages("rmarkdown")
install.packages("rmarkdown")
getwd()
knit2html("RegMods_CourseProject.Rmd")
knitr()
library(knitr)
knitr()
knit2html("RegMods_CourseProject.Rmd")
knit2pdf("RegMods_CourseProject.Rmd")
knit2html("RegMods_CourseProject.Rmd")
knit2pdf("RegMods_CourseProject.Rmd")
knit2html("RegMods_CourseProject.Rmd")
knit2html("RegMods_CourseProject.Rmd")
knit2html("RegMods_CourseProject.Rmd")
knit2html("RegMods_CourseProject.Rmd")
knit2html("RegMods_CourseProject.Rmd")
knit2html("RegMods_CourseProject.Rmd")
knit2pdf("RegMods_CourseProject.Rmd")
knit2pdf("RegMods_CourseProject.Rmd")
library(knitr)
library(markdown)
knit("RegMods_CourseProject.Rmd")
system("pandoc -s RegMods_CourseProject.html -o RegMods_CourseProject.pdf")
knit("RegMods_CourseProject.Rmd")
system("pandoc -s RegMods_CourseProject.html -o RegMods_CourseProject.pdf")
knit("RegMods_CourseProject.Rmd")
system("pandoc -s RegMods_CourseProject.html -o RegMods_CourseProject.pdf")
knit("RegMods_CourseProject.Rmd")
system("pandoc -s RegMods_CourseProject.html -o RegMods_CourseProject.pdf")
knit2html("RegMods_CourseProject.Rmd")
system("pandoc -s RegMods_CourseProject.html -o RegMods_CourseProject.pdf")
render("RegMods_CourseProject.Rmd")
library(rmarkdown)
?rmarkdown
render("RegMods_CourseProject.Rmd", pdf_document())
savehistory("C:/Github/Regression Models/commands_history.Rhistory")
render("RegMods_CourseProject.Rmd", pdf_document())
library(rmarkdown)
render("RegMods_CourseProject.Rmd", pdf_document())
knitr()
library(rmarkdown)
library(knitr)
render("RegMods_CourseProject.Rmd", pdf_document())
getwd()
setwd("C:/GitHub/Regression Models")
render("RegMods_CourseProject.Rmd", pdf_document())
render("RegMods_CourseProject.Rmd", pdf_document())
render("RegMods_CourseProject.Rmd", pdf_document())
render("RegMods_CourseProject.Rmd", pdf_document())
render("RegMods_CourseProject.Rmd", pdf_document())
render("RegMods_CourseProject.Rmd", pdf_document())
render("RegMods_CourseProject.Rmd", pdf_document())
render("RegMods_CourseProject.Rmd", pdf_document())
render("RegMods_CourseProject.Rmd", pdf_document())
render("RegMods_CourseProject.Rmd", pdf_document())
library(knitr)
knitr()
knit2html("RegMods_CourseProject.Rmd")
knit2html("PML_CourseProject.Rmd")
knit2html("PML_CourseProject.Rmd")
knit2html("PML_CourseProject.Rmd")
knit2html("PML_CourseProject.Rmd")
knit2html("PML_CourseProject.Rmd")
library(rattle, quietly=TRUE)
library(rattle)
install.packages("rattle")
install.packages("rpart")
install.packages("rpart")
install.packages("caret")
install.packages("caret")
install.packages("lattice")
install.packages("lattice")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("randomForest")
install.packages("randomForest")
install.packages("rattle")
install.packages("AppliedPredictiveModeling")
install.packages("AppliedPredictiveModeling")
knit2html("PML_CourseProject.Rmd")
savehistory("C:/Github/Practical Machine Learning/rhistory.Rhistory")
setwd("C:/GitHub/Practical Machine Learning")
knit2html("PML_CourseProject.Rmd")
library(knitr)
knit2html("PML_CourseProject.Rmd")
library(rpart.plot, quietly=TRUE)
library(rpart, quietly=TRUE)
savehistory("C:/Github/Practical Machine Learning/.Rhistory")
